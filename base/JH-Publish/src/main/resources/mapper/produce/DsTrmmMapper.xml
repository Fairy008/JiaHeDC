<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jh.data.mapping.IDsTrmmMapper" >
  <resultMap id="BaseResultMap" type="com.jh.data.entity.DsTrmm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="region_id" property="regionId" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="data_status" property="dataStatus" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="creator_name" property="creatorName" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="DATE" />
    <result column="modifier_name" property="modifierName" jdbcType="VARCHAR" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="trmm" property="trmm" jdbcType="NUMERIC" />
    <result column="trmm_max" property="trmmMax" jdbcType="NUMERIC" />
    <result column="trmm_min" property="trmmMin" jdbcType="NUMERIC" />
    <result column="trmm_stddev" property="trmmStddev" jdbcType="NUMERIC" />
    <result column="data_time" property="dataTime" jdbcType="DATE" />
    <result column="publish_status" property="publishStatus" jdbcType="INTEGER" />
    <result column="publish_time" property="publishTime" jdbcType="DATE" />
    <result column="publisher_name" property="publisherName" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
    <result column="publisher" property="publisher" jdbcType="INTEGER" />
    <result column="data_type" property="dataType" jdbcType="INTEGER" />
    <result column="resolution" property="resolution" jdbcType="INTEGER" />
    <result column="dataType_value" property="dataTypeValue" jdbcType="VARCHAR" />
    <result column="region_name" property="regionName" jdbcType="VARCHAR" />
    <result column="region_code" property="regionCode" jdbcType="VARCHAR" />
    <result column="resolution_value" property="resolutionValue" jdbcType="VARCHAR" />
    <result column="publish_status_name" property="publishStatusName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, region_id, remark, data_status, create_time, creator_name, creator, modify_time, 
    modifier_name, modifier, trmm, trmm_max, trmm_min, trmm_stddev, data_time, publish_status, 
    publish_time, publisher_name, del_flag, publisher, data_type, resolution
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from ds_trmm
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findByPage" resultMap="BaseResultMap" parameterType="com.jh.data.model.DsTrmmParam" fetchSize="200">
    SELECT
    ds.ID,
    ds.region_id,
    ds.remark,
    /* ds.data_status, ds.create_time, ds.creator_name, ds.creator, ds.modify_time, ds.modifier_name, ds.modifier,*/
    ds.trmm,
    ds.trmm_max,
    ds.trmm_min,
    ds.trmm_stddev,
    ds.data_time,
    ds.publish_status,
    ds.publish_time,
    ds.publisher_name,
    ds.del_flag,
    ds.publisher,
    ds.data_type,
    ds.resolution,
    r.china_name AS region_name,
    r.region_code as region_code,
    (select dr.data_name from init_dict dr where ds.resolution = dr.dict_id and dr.parent_id = 4000 AND dr.del_flag = '1' AND dr.data_status = '1') AS resolution_value,
    (select dp.data_name from init_dict dp where ds.publish_status = dp.dict_id AND dp.del_flag = '1' AND dp.data_status = '1') AS publish_status_name
    FROM
    ds_trmm ds
    LEFT JOIN init_region r ON ds.region_id = r.region_id
    AND r.del_flag = '1'
    AND r.data_status = '1'
    WHERE
    ds.del_flag = '1'
    AND ds.data_status = '1'
    <if test="id!=null and id!=''">
      AND  ds.id = #{id,jdbcType=INTEGER}
    </if>
    <!--<if test="regionId!=null and regionId!=''">
      AND  ds.region_id = #{regionId,jdbcType=INTEGER}
    </if>-->
    <if test="dataType!=null and dataType!=''">
      AND  ds.data_type = #{dataType,jdbcType=INTEGER}
    </if>
    <if test="resolution!=null and resolution!=''">
      AND  ds.resolution = #{resolution,jdbcType=INTEGER}
    </if>
    <if test="publishStatus!=null and publishStatus!=''">
      AND  ds.publish_status = #{publishStatus,jdbcType=INTEGER}
    </if>
    <if test="publisherName!=null and publisherName!=''">
      AND  ds.publisher_name like CONCAT('%', #{publisherName}, '%')
    </if>
    <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
      and ds.data_time BETWEEN CAST((#{startTime} || ' 00:00:00') AS  TIMESTAMP)AND CAST((#{endTime} || ' 23:59:59') AS TIMESTAMP)
    </if>
    <if test="regionCode!=null and regionCode!=''">
      AND r.region_code like #{regionCode,jdbcType=VARCHAR} || '%'
    </if>
    ORDER BY
    <choose>
      <when test="sidx != null and sidx != ''">
        ${sidx} ${sord}
      </when>
      <otherwise>
        ds.publish_status DESC, ds.data_time desc
      </otherwise>
    </choose>
  </select>

  <update id="updateDsTrmm" parameterType="com.jh.data.model.DsTrmmParam">
    update  ds_trmm
    <set >
      <if test="regionId != null" > region_id = #{regionId}, </if>
      <if test="remark != null" > remark = #{remark},</if>
      <if test="dataStatus != null" > data_status = #{dataStatus},</if>
      <if test="delFlag != null" > del_flag = #{delFlag}, </if>
      modify_time = now(),
      <if test="modifierName != null" > modifier_name = #{modifierName},</if>
      <if test="modifier != null" > modifier = #{modifier}, </if>
      <if test="trmm != null" > trmm = #{trmm}, </if>
      <if test="trmmMin != null" > trmm_min = #{trmmMin}, </if>
      <if test="trmmMax != null" > trmm_max = #{trmmMax}, </if>
      <if test="trmmStddev != null" > trmm_stddev = #{trmmStddev}, </if>
      <if test="dataTime != null" > data_time = #{dataTime}, </if>
      <if test="dataType != null" > data_type = #{dataType}, </if>
      <if test="publishStatus != null" > publish_status = #{publishStatus}, </if>
      <if test="publishTime != null" > publish_time = #{publishTime}, </if>
      <if test="publisherName != null" > publish_name = #{publishName}, </if>
      <if test="publisher != null" > publisher = #{publisher}, </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="publish" parameterType="com.jh.data.model.DsTParam" >
    update  ds_trmm
    <set >
      <if test="publishStatus != null" > publish_status = #{publishStatus}, </if>
      publish_time  = now(),
      <if test="publisherName != null" > publisher_name = #{publisherName}, </if>
      <if test="publisher != null" > publisher = #{publisher}, </if>
    </set>
    where id in
    <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT
    ds.ID,
    ds.region_id,
    ds.remark,
    ds.data_status,
    ds.create_time,
    ds.creator_name,
    ds.creator,
    ds.modify_time,
    ds.modifier_name,
    ds.modifier,
    ds.trmm,
    ds.trmm_max,
    ds.trmm_min,
    ds.trmm_stddev,
    ds.data_time,
    ds.publish_status,
    ds.publish_time,
    ds.publisher_name,
    ds.del_flag,
    ds.publisher,
    ds.data_type,
    ds.resolution,
    r.china_name AS region_name,
    r.region_code,
    dr.data_name AS resolution_value,
    dp.data_name AS publish_status_name
    FROM
    ds_trmm ds
    LEFT JOIN init_dict dr ON ds.resolution = dr.dict_id
    AND dr.parent_id = 4000
    AND dr.del_flag = '1'
    AND dr.data_status = '1'
    LEFT JOIN init_region r ON ds.region_id = r.region_id
    AND r.del_flag = '1'
    AND r.data_status = '1'
    LEFT JOIN init_dict dp ON ds.publish_status = dp.dict_id
    AND dp.del_flag = '1'
    AND dp.data_status = '1'
    WHERE
    ds.del_flag = '1'
    AND ds.data_status = '1'
    AND id = #{id,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ds_trmm
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jh.data.entity.DsTrmm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ds_trmm (id, region_id, remark, 
      data_status, create_time, creator_name, 
      creator, modify_time, modifier_name, 
      modifier, trmm, trmm_max, 
      trmm_min, trmm_stddev, data_time, 
      publish_status, publish_time, publisher_name, 
      del_flag, publisher, data_type, 
      resolution)
    values (#{id,jdbcType=INTEGER}, #{regionId,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{dataStatus,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{creatorName,jdbcType=VARCHAR}, 
      #{creator,jdbcType=BIGINT}, #{modifyTime,jdbcType=TIMESTAMP}, #{modifierName,jdbcType=VARCHAR}, 
      #{modifier,jdbcType=INTEGER}, #{trmm,jdbcType=NUMERIC}, #{trmmMax,jdbcType=NUMERIC}, 
      #{trmmMin,jdbcType=NUMERIC}, #{trmmStddev,jdbcType=NUMERIC}, #{dataTime,jdbcType=TIMESTAMP}, 
      #{publishStatus,jdbcType=INTEGER}, #{publishTime,jdbcType=TIMESTAMP}, #{publisherName,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=CHAR}, #{publisher,jdbcType=INTEGER}, #{dataType,jdbcType=INTEGER}, 
      #{resolution,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jh.data.entity.DsTrmm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ds_trmm
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="regionId != null" >
        region_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="dataStatus != null" >
        data_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creatorName != null" >
        creator_name,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifierName != null" >
        modifier_name,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="trmm != null" >
        trmm,
      </if>
      <if test="trmmMax != null" >
        trmm_max,
      </if>
      <if test="trmmMin != null" >
        trmm_min,
      </if>
      <if test="trmmStddev != null" >
        trmm_stddev,
      </if>
      <if test="dataTime != null" >
        data_time,
      </if>
      <if test="publishStatus != null" >
        publish_status,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="publisherName != null" >
        publisher_name,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="publisher != null" >
        publisher,
      </if>
      <if test="dataType != null" >
        data_type,
      </if>
      <if test="resolution != null" >
        resolution,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="regionId != null" >
        #{regionId,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null" >
        #{dataStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorName != null" >
        #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierName != null" >
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=INTEGER},
      </if>
      <if test="trmm != null" >
        #{trmm,jdbcType=NUMERIC},
      </if>
      <if test="trmmMax != null" >
        #{trmmMax,jdbcType=NUMERIC},
      </if>
      <if test="trmmMin != null" >
        #{trmmMin,jdbcType=NUMERIC},
      </if>
      <if test="trmmStddev != null" >
        #{trmmStddev,jdbcType=NUMERIC},
      </if>
      <if test="dataTime != null" >
        #{dataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishStatus != null" >
        #{publishStatus,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publisherName != null" >
        #{publisherName,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=INTEGER},
      </if>
      <if test="dataType != null" >
        #{dataType,jdbcType=INTEGER},
      </if>
      <if test="resolution != null" >
        #{resolution,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jh.data.entity.DsTrmm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ds_trmm
    <set >
      <if test="regionId != null" >
        region_id = #{regionId,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null" >
        data_status = #{dataStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorName != null" >
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierName != null" >
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=INTEGER},
      </if>
      <if test="trmm != null" >
        trmm = #{trmm,jdbcType=NUMERIC},
      </if>
      <if test="trmmMax != null" >
        trmm_max = #{trmmMax,jdbcType=NUMERIC},
      </if>
      <if test="trmmMin != null" >
        trmm_min = #{trmmMin,jdbcType=NUMERIC},
      </if>
      <if test="trmmStddev != null" >
        trmm_stddev = #{trmmStddev,jdbcType=NUMERIC},
      </if>
      <if test="dataTime != null" >
        data_time = #{dataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishStatus != null" >
        publish_status = #{publishStatus,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publisherName != null" >
        publisher_name = #{publisherName,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="publisher != null" >
        publisher = #{publisher,jdbcType=INTEGER},
      </if>
      <if test="dataType != null" >
        data_type = #{dataType,jdbcType=INTEGER},
      </if>
      <if test="resolution != null" >
        resolution = #{resolution,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jh.data.entity.DsTrmm" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ds_trmm
    set region_id = #{regionId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      data_status = #{dataStatus,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=INTEGER},
      trmm = #{trmm,jdbcType=NUMERIC},
      trmm_max = #{trmmMax,jdbcType=NUMERIC},
      trmm_min = #{trmmMin,jdbcType=NUMERIC},
      trmm_stddev = #{trmmStddev,jdbcType=NUMERIC},
      data_time = #{dataTime,jdbcType=TIMESTAMP},
      publish_status = #{publishStatus,jdbcType=INTEGER},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      publisher_name = #{publisherName,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      publisher = #{publisher,jdbcType=INTEGER},
      data_type = #{dataType,jdbcType=INTEGER},
      resolution = #{resolution,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <!--
     查询指定时间类上中下旬的降雨的均值
     @param TtnParam : 参数，（区域ID，起止日期）
     @return List<TenDaysTrmmDataReturn> : 上中下旬降雨均值
     @version <1> 2018-03-22 lxy: Created.
     @version <2> 2018-06-27 cxw: update:降雨地温表拆分后更改sql查询
   -->
  <select id="findTrmmByTenDays" resultType="com.jh.data.model.TemTrmmTotalDataReturn" parameterType="com.jh.data.model.TtnParam" >

    select zz.regionId, zz.level, zz.regionName, zz.date,regexp_split_to_table(zz.water,',') trmm,
    (regexp_split_to_table(monthtype,',')) dateFlag from
    (select region.region_id as regionId,region.level,region.china_name regionName,to_char(trm.data_time,'YYYY-MM') date,
    (sum(case when date_part('DAY',trm.data_time) &lt;=10  then trmm end)||','||
    sum(case when date_part('DAY',trm.data_time) >10 and date_part('DAY',trm.data_time) &lt;=20 then trmm end)||','||
    sum(case when date_part('DAY',trm.data_time) >20 then trmm end))  water,
    (max(case when date_part('DAY',trm.data_time) &lt;=10  then 1 end)||','||
    max(case when date_part('DAY',trm.data_time) >10 and date_part('DAY',trm.data_time) &lt;=20 then 2 end)||','||
    max(case when date_part('DAY',trm.data_time) >20 then 3 end))  monthtype
    from ds_trmm trm left join init_region region on trm.region_id = region.region_id
    <where>
      <if test="#{regionId != null}">
        (region.region_id=#{regionId} or region.parent_id = #{regionId})
      </if>
      <if test="#{startDate != null and endDate != null}">
        and to_char(trm.data_time,'YYYY-MM')
        between
        to_char(cast(#{startDate} as timestamp),'YYYY-MM')
        and
        to_char(cast(#{endDate} as timestamp),'YYYY-MM')
      </if>
    </where>
    group by regionId,regionName,date,level    order by regionId,regionName,date) zz

  </select>

  <!--
    查询历史时间段上中下旬的雨量均值
    @param TtnParam : 参数，（区域ID，起止日期）
    @return List<TenDaysTrmmDataReturn> : 历史时间段上中下旬雨量均值
    @version <1> 2018-3-22 lxy: Created.
    @version <2> 2018-06-27 cxw: update:降雨地温表拆分后更改sql查询
  -->
  <select id="findHistoryAvgForTrmmTotal" resultType="com.jh.data.model.TenDaysTrmmDataReturn" parameterType="java.util.HashMap" >
    select   round(avg(waterFirstAvg),2) waterFirstAvg, round(avg(waterSecondAvg),2) waterSecondAvg, round(avg(waterThirdAvg),2) waterThirdAvg
    from ( select   region.region_id as regionId,to_char(trm.data_time,'YYYY') date,
    sum(case when date_part('MONTH',trm.data_time)=#{month} and date_part('DAY',trm.data_time) &lt;=10  then trmm end) as waterFirstAvg,
    sum(case when date_part('MONTH',trm.data_time)=#{month} and date_part('DAY',trm.data_time) >10 and date_part('DAY',trm.data_time) &lt;=20 then trmm end)waterSecondAvg,
    sum(case when date_part('MONTH',trm.data_time)=#{month} and date_part('DAY',trm.data_time) >20 then trmm end) waterThirdAvg
    from ds_trmm trm left join init_region region on trm.region_id = region.region_id
    <where>
      <if test="#{regionId != null}">
        (region.region_id=#{regionId})
      </if>
      <if test="#{endDate != null}">
        and  #{endDate}> to_char(trm.data_time,'YYYY')
      </if>
    </where>
    group by regionId,date) as temp group by regionId

    <!--     select   round(avg(waterFirst),2) waterFirstAvg, round(avg(waterSecond),2) waterSecondAvg, round(avg(waterThird),2) waterThirdAvg
      from (select   region.region_id as regionId,to_char(trm.data_time,'YYYY') date,
      sum(case when date_part('MONTH',trm.data_time)=#{month} and date_part('DAY',trm.data_time) &lt;=10  then trmm end) as waterFirst,
      sum( case when date_part('MONTH',trm.data_time)=#{month} and date_part('DAY',trm.data_time) >10 and date_part('DAY',trm.data_time) &lt;=20
      then trmm end)waterSecond, sum(case when date_part('MONTH',trm.data_time)=#{month} and date_part('DAY',trm.data_time) >20 then trmm end
      ) waterThird  from ds_trmm trm left join init_region region on trm.region_id = region.region_id
      <where>
        <if test="#{regionId != null}">
          (region.region_id=#{regionId} or region.parent_id = #{regionId})
        </if>
        <if test="#{endDate != null}">
          and #{endDate}> to_char(trm.data_time,'YYYY')
        </if>
      </where>
      group by regionId,date) as temp-->

  </select>

  <select id="queryDateTimeList" resultMap="BaseResultMap" parameterType="com.jh.data.model.ReportCreateParam">
    SELECT DISTINCT data_time FROM ds_trmm
    WHERE data_status = '1' AND del_flag = '1' AND publish_status = 2201
    <if test="regionId != null">
      AND region_id = #{regionId,jdbcType=INTEGER}
    </if>
    <if test="resolution != null">
      AND resolution = #{resolution,jdbcType=INTEGER}
    </if>
    ORDER BY data_time DESC
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jh.produce.process.mapping.IHandleDataMapper" >
  <resultMap id="BaseResultMap" type="com.jh.produce.process.entity.HandleData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="handle_id" property="handleId" jdbcType="BIGINT" />
    <result column="handle_name" property="handleName" jdbcType="VARCHAR" />
    <result column="data_status" property="dataStatus" jdbcType="CHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator_name" property="creatorName" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modifier_name" property="modifierName" jdbcType="VARCHAR" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="region_id" property="regionId" jdbcType="BIGINT" />
    <result column="sat_id" property="satId" jdbcType="INTEGER" />
    <result column="storage_type" property="storageType" jdbcType="CHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="fail_reason" property="failReason" jdbcType="VARCHAR" />
    <result column="handle_status" property="handleStatus" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="china_name" property="chinaName" jdbcType="VARCHAR" />
    <result column="region_code" property="regionCode" jdbcType="VARCHAR" />
    <result column="sat_name_cn" property="satNameCN" jdbcType="VARCHAR" />
    <result column="handle_status_cn" property="handleStatusCN" jdbcType="VARCHAR" />
    <result column="storage_type_cn" property="storageTypeCN" jdbcType="VARCHAR" />
    <result column="storage_url" property="storageUrl" jdbcType="VARCHAR" />
    <result column="task_type" property="taskType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    handle_id, data_status, del_flag, create_time, creator_name, creator,
    modify_time,modifier_name, modifier, remark, region_id, sat_id, storage_type,
    start_time, end_time,fail_reason,handle_status,start_date,end_date,storage_url,task_type,
    (select data_name from init_dict where del_flag = '1' and data_status = '1' and parent_id = 400 and dict_id = sat_id) as sat_name_cn,
    (select data_name from init_dict where del_flag = '1' and data_status = '1' and parent_id = 1000 and dict_id = handle_status) as handle_status_cn,
    (select china_name from init_region where init_region.region_id = pro_handle_task.region_id) as china_name,
    (select region_code from init_region where init_region.region_id = pro_handle_task.region_id) as region_code
  </sql>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from pro_handle_task where handle_id = #{handleId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from pro_handle_task
    where handle_id = #{handleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pro_handle_task
    where handle_id = #{handleId,jdbcType=BIGINT}
  </delete>
  <insert id="save" parameterType="com.jh.produce.process.entity.HandleData" useGeneratedKeys="true" keyProperty="handleId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pro_handle_task (
      create_time,modify_time, creator_name, creator,
      remark, region_id, sat_id,
      storage_type, start_time, end_time, handle_name,
      fail_reason,handle_status,start_date,end_date,storage_url,task_type)
    values (
      now(),now(), #{creatorName,jdbcType=VARCHAR}, #{creator,jdbcType=INTEGER},
      #{remark,jdbcType=VARCHAR}, #{regionId,jdbcType=BIGINT}, (select dict_id from init_dict where del_flag = '1' and data_status = '1' and  data_code = #{satName,jdbcType=VARCHAR} ),
      #{storageType,jdbcType=CHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{handleName,jdbcType=VARCHAR},
      #{failReason,jdbcType=VARCHAR},#{handleStatus,jdbcType=INTEGER},
      #{startDate,jdbcType=DATE},#{endDate,jdbcType=DATE},#{storageUrl,jdbcType=VARCHAR}, #{taskType,jdbcType=INTEGER})
  </insert>
  <insert id="saveTaskStorageRelate" parameterType="com.jh.produce.process.entity.HandleData">
     <!-- insert into pro_relate_task_storage(handle_id,storage_id,file_path_link) values
      <foreach collection="relateStorageLink" item="item" separator="," index="index">
        (#{handleId},#{index},#{item})
      </foreach>-->

    insert into pro_relate_task_storage(handle_id, file_path_link) values
    <foreach collection="list" item="relateTaskStorage" separator=",">
      (#{relateTaskStorage.handleId},#{relateTaskStorage.filePathLink})
    </foreach>

  </insert>
  <insert id="insertSelective" parameterType="com.jh.produce.process.entity.HandleData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pro_handle_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="handleId != null" >
        handle_id,
      </if>
      <if test="dataStatus != null" >
        data_status,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creatorName != null" >
        creator_name,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifierName != null" >
        modifier_name,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="regionId != null" >
        region_id,
      </if>
      <if test="satId != null" >
        sat_id,
      </if>
      <if test="storageType != null" >
        storage_type,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="failReason != null" >
        fail_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="handleId != null" >
        #{handleId,jdbcType=BIGINT},
      </if>
      <if test="dataStatus != null" >
        #{dataStatus,jdbcType=CHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="creatorName != null" >
        #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=DATE},
      </if>
      <if test="modifierName != null" >
        #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null" >
        #{regionId,jdbcType=BIGINT},
      </if>
      <if test="satId != null" >
        #{satId,jdbcType=INTEGER},
      </if>
      <if test="storageType != null" >
        #{storageType,jdbcType=CHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=DATE},
      </if>
      <if test="failReason != null" >
        #{failReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.jh.produce.process.entity.HandleData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pro_handle_task
    <set >
      <if test="dataStatus != null" >
        data_status = #{dataStatus,jdbcType=CHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="creatorName != null" >
        creator_name = #{creatorName,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=DATE},
      </if>
      <if test="modifierName != null" >
        modifier_name = #{modifierName,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null" >
        region_id = #{regionId,jdbcType=BIGINT},
      </if>
      <if test="satId != null" >
        sat_id = #{satId,jdbcType=INTEGER},
      </if>
      <if test="storageType != null" >
        storage_type = #{storageType,jdbcType=CHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="failReason != null" >
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="handleStatus != null" >
        handle_status = #{handleStatus,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="storageUrl != null" >
        storage_url = #{storageUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where handle_id = #{handleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jh.produce.process.entity.HandleData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pro_handle_task
    set data_status = #{dataStatus,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=DATE},
      creator_name = #{creatorName,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=DATE},
      modifier_name = #{modifierName,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      region_id = #{regionId,jdbcType=BIGINT},
      sat_id = #{satId,jdbcType=INTEGER},
      storage_type = #{storageType,jdbcType=CHAR},
      start_time = #{startTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      fail_reason = #{failReason,jdbcType=VARCHAR}
    where handle_id = #{handleId,jdbcType=BIGINT}
  </update>

  <select id="taskPage" parameterType="com.jh.produce.process.model.HandleDataParam" resultMap="BaseResultMap">
    select d.handle_id, d.data_status, d.del_flag, d.create_time, d.creator_name, d.creator,
    d.modify_time,d.modifier_name, d.modifier, d.remark, d.region_id,r.china_name, d.sat_id, d.storage_type,d.handle_name,
    d.start_time, d.end_time,d.fail_reason,d.handle_status,r.region_code,d.task_type,
    (select data_name from init_dict where del_flag = '1' and data_status = '1' and parent_id = 400 and dict_id = d.sat_id) as sat_name_cn,
    (select data_name from init_dict where del_flag = '1' and data_status = '1' and parent_id = 1000 and dict_id = d.handle_status) as handle_status_cn,
    (select data_name from init_dict where del_flag = '1' and data_status = '1' and parent_id = 700 and dict_id = d.storage_type) as storage_type_cn
    from pro_handle_task as d left join init_region r on d.region_id= r.region_id
    where d.del_flag = '1' and d.data_status = '1'
      <if test="storageType != null">
        AND d.storage_type = #{storageType,jdbcType=INTEGER}
      </if>
      <if test="satId != null">
        AND d.sat_id = #{satId,jdbcType=INTEGER}
      </if>
      <if test="regionId != null">
        AND d.region_id = #{regionId,jdbcType=INTEGER}
      </if>
      <if test="handleStatus != null">
        AND d.handle_status = #{handleStatus,jdbcType=INTEGER}
      </if>
      <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
        AND d.start_time &gt;= CAST(#{startTime} AS TIMESTAMP ) AND d.end_time &lt;= CAST(#{endTime} AS TIMESTAMP)
      </if>

      <!--添加当前登录人信息查询-->
      <if test="creator != null">
        and d.creator = #{creator,jdbcType=INTEGER}
      </if>
      <if test="handleName != null and handleName != ''">
        and d.handle_name like '%' || #{handleName, jdbcType=VARCHAR} || '%'
      </if>
      <if test="creatorName != null and creatorName != ''">
        and d.creator_name like '%' || #{creatorName, jdbcType=VARCHAR} || '%'
      </if>
    ORDER BY
    <choose>
      <when test="sidx != null and sidx != ''">
        ${sidx} ${sord}
      </when>
      <otherwise>
        d.handle_status asc, d.modify_time desc,d.create_time desc
      </otherwise>
    </choose>
  </select>
  <!--<select id="findTaskAndStorageList" parameterType="java.lang.Integer" resultType="com.jh.produce.process.model.RelateTaskStorageParam">-->
    <!--select handle_id as handleId,storage_id as storageId from pro_relate_task_storage where handle_id = #{handleId}-->
  <!--</select>-->

  <select id="findHandleConfigBySatId" parameterType="java.lang.Integer" resultType="com.jh.produce.process.model.RelateHandleSatParam">
    select handle_meta_id as handleMetaId,sat_id as satId from pro_relate_handle_sat where sat_id = #{satId}
  </select>

  <update id="updateHandleStatus" parameterType="com.jh.produce.process.entity.HandleData">
    update pro_handle_task
    <set >
      handle_status = #{handleStatus},
      modify_time = now(),
      fail_reason = null,
    </set>
    where handle_id = #{handleId}
  </update>

  <select id="findHandleFileLink" parameterType="java.lang.Integer" resultType="java.lang.String">
    select file_path_link from pro_relate_task_storage a join pro_handle_task b on a.handle_id = b.handle_id where b.handle_id= #{handleId}
  </select>

  <select id="findHandleFileLinkList" parameterType="java.lang.Integer" resultType="com.jh.produce.process.model.HandleRelateDataParam">
    select a.file_path_link as filePath,a.data_index as dataIndex,a.handle_id as handleId,a.storage_id as storageId,a.handle_data_id as handleDataId
    from pro_relate_task_storage a join pro_handle_task b on a.handle_id = b.handle_id where b.handle_id= #{handleId}  order by a.data_index
  </select>

  <update id="updateHandleDataIndex" parameterType ="java.util.List" >
    <!--update pro_relate_task_storage  <set>
    data_index = #{dataIndex}
  </set>
    where  handle_data_id =  #{handleDataId}-->
    update pro_relate_task_storage
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="data_index =case" suffix="end,">
        <foreach collection="list" item="item" index="index">
          when handle_data_id = #{item.handleDataId} then #{item.dataIndex}
        </foreach>
      </trim>
    </trim>
    where
    <foreach collection="list" index="index" item="item" open="( " separator=") or (" close=" )">
      handle_data_id = #{item.handleDataId}
    </foreach>


  </update>

  <delete id="deleteStepByHandleId" parameterType="Integer">
    delete from pro_handle_step where handle_id = #{handleId}
  </delete>
</mapper>